/*
Chrysalis Service API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the IUpdatePostRequestDTO type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &IUpdatePostRequestDTO{}

// IUpdatePostRequestDTO struct for IUpdatePostRequestDTO
type IUpdatePostRequestDTO struct {
	// Title of the post.
	Title *string `json:"title,omitempty"`
	// Summary of the post.
	Summary *string `json:"summary,omitempty"`
	// Content of the post.
	Content *string `json:"content,omitempty"`
	// URL of the post thumbnail.
	Thumbnail *string `json:"thumbnail,omitempty"`
}

// NewIUpdatePostRequestDTO instantiates a new IUpdatePostRequestDTO object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIUpdatePostRequestDTO() *IUpdatePostRequestDTO {
	this := IUpdatePostRequestDTO{}
	return &this
}

// NewIUpdatePostRequestDTOWithDefaults instantiates a new IUpdatePostRequestDTO object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIUpdatePostRequestDTOWithDefaults() *IUpdatePostRequestDTO {
	this := IUpdatePostRequestDTO{}
	return &this
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *IUpdatePostRequestDTO) GetTitle() string {
	if o == nil || IsNil(o.Title) {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IUpdatePostRequestDTO) GetTitleOk() (*string, bool) {
	if o == nil || IsNil(o.Title) {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *IUpdatePostRequestDTO) HasTitle() bool {
	if o != nil && !IsNil(o.Title) {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *IUpdatePostRequestDTO) SetTitle(v string) {
	o.Title = &v
}

// GetSummary returns the Summary field value if set, zero value otherwise.
func (o *IUpdatePostRequestDTO) GetSummary() string {
	if o == nil || IsNil(o.Summary) {
		var ret string
		return ret
	}
	return *o.Summary
}

// GetSummaryOk returns a tuple with the Summary field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IUpdatePostRequestDTO) GetSummaryOk() (*string, bool) {
	if o == nil || IsNil(o.Summary) {
		return nil, false
	}
	return o.Summary, true
}

// HasSummary returns a boolean if a field has been set.
func (o *IUpdatePostRequestDTO) HasSummary() bool {
	if o != nil && !IsNil(o.Summary) {
		return true
	}

	return false
}

// SetSummary gets a reference to the given string and assigns it to the Summary field.
func (o *IUpdatePostRequestDTO) SetSummary(v string) {
	o.Summary = &v
}

// GetContent returns the Content field value if set, zero value otherwise.
func (o *IUpdatePostRequestDTO) GetContent() string {
	if o == nil || IsNil(o.Content) {
		var ret string
		return ret
	}
	return *o.Content
}

// GetContentOk returns a tuple with the Content field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IUpdatePostRequestDTO) GetContentOk() (*string, bool) {
	if o == nil || IsNil(o.Content) {
		return nil, false
	}
	return o.Content, true
}

// HasContent returns a boolean if a field has been set.
func (o *IUpdatePostRequestDTO) HasContent() bool {
	if o != nil && !IsNil(o.Content) {
		return true
	}

	return false
}

// SetContent gets a reference to the given string and assigns it to the Content field.
func (o *IUpdatePostRequestDTO) SetContent(v string) {
	o.Content = &v
}

// GetThumbnail returns the Thumbnail field value if set, zero value otherwise.
func (o *IUpdatePostRequestDTO) GetThumbnail() string {
	if o == nil || IsNil(o.Thumbnail) {
		var ret string
		return ret
	}
	return *o.Thumbnail
}

// GetThumbnailOk returns a tuple with the Thumbnail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IUpdatePostRequestDTO) GetThumbnailOk() (*string, bool) {
	if o == nil || IsNil(o.Thumbnail) {
		return nil, false
	}
	return o.Thumbnail, true
}

// HasThumbnail returns a boolean if a field has been set.
func (o *IUpdatePostRequestDTO) HasThumbnail() bool {
	if o != nil && !IsNil(o.Thumbnail) {
		return true
	}

	return false
}

// SetThumbnail gets a reference to the given string and assigns it to the Thumbnail field.
func (o *IUpdatePostRequestDTO) SetThumbnail(v string) {
	o.Thumbnail = &v
}

func (o IUpdatePostRequestDTO) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o IUpdatePostRequestDTO) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Title) {
		toSerialize["title"] = o.Title
	}
	if !IsNil(o.Summary) {
		toSerialize["summary"] = o.Summary
	}
	if !IsNil(o.Content) {
		toSerialize["content"] = o.Content
	}
	if !IsNil(o.Thumbnail) {
		toSerialize["thumbnail"] = o.Thumbnail
	}
	return toSerialize, nil
}

type NullableIUpdatePostRequestDTO struct {
	value *IUpdatePostRequestDTO
	isSet bool
}

func (v NullableIUpdatePostRequestDTO) Get() *IUpdatePostRequestDTO {
	return v.value
}

func (v *NullableIUpdatePostRequestDTO) Set(val *IUpdatePostRequestDTO) {
	v.value = val
	v.isSet = true
}

func (v NullableIUpdatePostRequestDTO) IsSet() bool {
	return v.isSet
}

func (v *NullableIUpdatePostRequestDTO) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIUpdatePostRequestDTO(val *IUpdatePostRequestDTO) *NullableIUpdatePostRequestDTO {
	return &NullableIUpdatePostRequestDTO{value: val, isSet: true}
}

func (v NullableIUpdatePostRequestDTO) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIUpdatePostRequestDTO) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


