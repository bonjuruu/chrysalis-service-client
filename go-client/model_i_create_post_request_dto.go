/*
Chrysalis Service API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ICreatePostRequestDTO type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ICreatePostRequestDTO{}

// ICreatePostRequestDTO struct for ICreatePostRequestDTO
type ICreatePostRequestDTO struct {
	// Name of the author.
	Author string `json:"author"`
	// Title of the post.
	Title string `json:"title"`
	// Summary of the post.
	Summary string `json:"summary"`
	// Content of the post.
	Content string `json:"content"`
	// URL of the post thumbnail.
	Thumbnail string `json:"thumbnail"`
}

type _ICreatePostRequestDTO ICreatePostRequestDTO

// NewICreatePostRequestDTO instantiates a new ICreatePostRequestDTO object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewICreatePostRequestDTO(author string, title string, summary string, content string, thumbnail string) *ICreatePostRequestDTO {
	this := ICreatePostRequestDTO{}
	this.Author = author
	this.Title = title
	this.Summary = summary
	this.Content = content
	this.Thumbnail = thumbnail
	return &this
}

// NewICreatePostRequestDTOWithDefaults instantiates a new ICreatePostRequestDTO object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewICreatePostRequestDTOWithDefaults() *ICreatePostRequestDTO {
	this := ICreatePostRequestDTO{}
	return &this
}

// GetAuthor returns the Author field value
func (o *ICreatePostRequestDTO) GetAuthor() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Author
}

// GetAuthorOk returns a tuple with the Author field value
// and a boolean to check if the value has been set.
func (o *ICreatePostRequestDTO) GetAuthorOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Author, true
}

// SetAuthor sets field value
func (o *ICreatePostRequestDTO) SetAuthor(v string) {
	o.Author = v
}

// GetTitle returns the Title field value
func (o *ICreatePostRequestDTO) GetTitle() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Title
}

// GetTitleOk returns a tuple with the Title field value
// and a boolean to check if the value has been set.
func (o *ICreatePostRequestDTO) GetTitleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Title, true
}

// SetTitle sets field value
func (o *ICreatePostRequestDTO) SetTitle(v string) {
	o.Title = v
}

// GetSummary returns the Summary field value
func (o *ICreatePostRequestDTO) GetSummary() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Summary
}

// GetSummaryOk returns a tuple with the Summary field value
// and a boolean to check if the value has been set.
func (o *ICreatePostRequestDTO) GetSummaryOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Summary, true
}

// SetSummary sets field value
func (o *ICreatePostRequestDTO) SetSummary(v string) {
	o.Summary = v
}

// GetContent returns the Content field value
func (o *ICreatePostRequestDTO) GetContent() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Content
}

// GetContentOk returns a tuple with the Content field value
// and a boolean to check if the value has been set.
func (o *ICreatePostRequestDTO) GetContentOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Content, true
}

// SetContent sets field value
func (o *ICreatePostRequestDTO) SetContent(v string) {
	o.Content = v
}

// GetThumbnail returns the Thumbnail field value
func (o *ICreatePostRequestDTO) GetThumbnail() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Thumbnail
}

// GetThumbnailOk returns a tuple with the Thumbnail field value
// and a boolean to check if the value has been set.
func (o *ICreatePostRequestDTO) GetThumbnailOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Thumbnail, true
}

// SetThumbnail sets field value
func (o *ICreatePostRequestDTO) SetThumbnail(v string) {
	o.Thumbnail = v
}

func (o ICreatePostRequestDTO) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ICreatePostRequestDTO) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["author"] = o.Author
	toSerialize["title"] = o.Title
	toSerialize["summary"] = o.Summary
	toSerialize["content"] = o.Content
	toSerialize["thumbnail"] = o.Thumbnail
	return toSerialize, nil
}

func (o *ICreatePostRequestDTO) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"author",
		"title",
		"summary",
		"content",
		"thumbnail",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varICreatePostRequestDTO := _ICreatePostRequestDTO{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varICreatePostRequestDTO)

	if err != nil {
		return err
	}

	*o = ICreatePostRequestDTO(varICreatePostRequestDTO)

	return err
}

type NullableICreatePostRequestDTO struct {
	value *ICreatePostRequestDTO
	isSet bool
}

func (v NullableICreatePostRequestDTO) Get() *ICreatePostRequestDTO {
	return v.value
}

func (v *NullableICreatePostRequestDTO) Set(val *ICreatePostRequestDTO) {
	v.value = val
	v.isSet = true
}

func (v NullableICreatePostRequestDTO) IsSet() bool {
	return v.isSet
}

func (v *NullableICreatePostRequestDTO) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableICreatePostRequestDTO(val *ICreatePostRequestDTO) *NullableICreatePostRequestDTO {
	return &NullableICreatePostRequestDTO{value: val, isSet: true}
}

func (v NullableICreatePostRequestDTO) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableICreatePostRequestDTO) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


